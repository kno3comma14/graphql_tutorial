schema {
  query: Query
  mutation: Mutation
}

enum CurrencyUnit {
  USD,
  PEN,
  EUR
}

type Coin {
  id: ID!
  description: String!
  name: String!
  price: Float!
}

type Wallet {
  id: ID!
  name: String!
  currency(currency: CurrencyUnit = USD): String!
  coins: [Coin]
}

type WalletResult {
  success: Boolean!
  errors: [String]
  wallet: Wallet
}

type WalletsResult {
  success: Boolean!
  errors: [String]
  wallets: [Wallet]
}

type Query {
  wallets: WalletsResult!
  wallet(walletId: ID!): WalletResult!
}

type DeleteWalletResult {
  success: Boolean!
  errors: [String]
}

type Mutation {
  createWallet(name: String!, currency: String!, coins: [Int]): WalletResult!
  deleteWallet(walletId: ID!): DeleteWalletResult!
  addNewCoinToWallet(walletId: ID!, coinId: ID!): WalletResult!
}
